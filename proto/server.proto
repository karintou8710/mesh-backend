syntax = "proto3";

package Server;

option go_package = "./go_protocol_buffer";

message ShareGroup {
    uint64 id = 1;
    string linkKey = 2;
    double destLon = 3;
    double destLat = 4;
    repeated User users = 5;
    string meetingTime = 6;
    string inviteUrl = 7;
    string address = 8;
    AdminUser adminUser = 9;
    bool isSharingLocation = 10;
    optional string sharingLocationStartTime = 11;
}

message User {
    uint64 id = 1;
    string name = 2;
    bool isArrived = 3;
    optional ShareGroup shareGroup = 4;
    optional uint64 shareGroupId = 5;
    optional double lat = 6;
    optional double lon = 7;
    optional string positionAt = 8;
    optional string shortMessage = 9;
    string iconID = 10;
}

message AdminUser {
    uint64 id = 1;
    string name = 2;
}

message AnonymousSignUpRequest {
    string name = 1;
    string iconID = 2;
}

message AnonymousSignUpResponse {
    User user = 1;
    string accessToken = 2;
}

message CreateShareGroupRequest {
    double destLon = 1;
    double destLat = 2;
    string meetingTime = 3;
    string address = 4;
    optional string sharingLocationStartTime = 5;
}

message CreateShareGroupResponse {
    ShareGroup shareGroup = 1;
}

message JoinShareGroupRequest {
    string linkKey = 1;
}

message JoinShareGroupResponse {
    ShareGroup shareGroup = 1;
}

message GetShareGroupByLinkKeyRequest {
    string linkKey = 1;
}

message GetShareGroupByLinkKeyResponse {
    ShareGroup shareGroup = 1;
}

message GetCurrentShareGroupRequest {}

message GetCurrentShareGroupResponse {
    ShareGroup shareGroup = 1;
}

message UpdatePositionRequest {
    double lat = 1;
    double lon = 2;
}

message UpdatePositionResponse {
    User user = 1;
}

message GetCurrentUserRequest {}

message GetCurrentUserResponse {
    User user = 1;
}

message LeaveShareGroupRequest {}

message LeaveShareGroupResponse {}

message ArriveDestRequest {}

message ArriveDestResponse {
    User user = 1;
}

message UpdateShortMessageRequest {
    string shortMessage = 1;
}

message UpdateShortMessageResponse {
    User user = 1;
}

service Service {
    rpc AnonymousSignUp (AnonymousSignUpRequest) returns (AnonymousSignUpResponse);
    rpc CreateShareGroup (CreateShareGroupRequest) returns (CreateShareGroupResponse);
    rpc JoinShareGroup (JoinShareGroupRequest) returns (JoinShareGroupResponse);
    rpc GetCurrentShareGroup (GetCurrentShareGroupRequest) returns (GetCurrentShareGroupResponse);
    rpc GetShareGroupByLinkKey (GetShareGroupByLinkKeyRequest) returns (GetShareGroupByLinkKeyResponse);
    rpc UpdatePosition (UpdatePositionRequest) returns (UpdatePositionResponse);
    rpc GetCurrentUser (GetCurrentUserRequest) returns (GetCurrentUserResponse);
    rpc LeaveShareGroup (LeaveShareGroupRequest) returns (LeaveShareGroupResponse);
    rpc ArriveDest (ArriveDestRequest) returns (ArriveDestResponse);
    rpc UpdateShortMessage (UpdateShortMessageRequest) returns (UpdateShortMessageResponse);
    // Stream対応
    rpc GetCurrentShareGroupServerStream (GetCurrentShareGroupRequest) returns (stream GetCurrentShareGroupResponse);
}
